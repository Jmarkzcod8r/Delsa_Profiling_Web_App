// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

// Select the database to use.
use('Firedata');

// The drop() command destroys all data from a collection.
// Make sure you run it against the correct database and collection.

// db.logdatas.drop();

// db.logdatas.updateOne( {_id: ObjectId("6344559b6f731992f1c50a35")},
//     {
//         $set: {
//             log: "this is updated log",
//             desc: "this updated desc",
//             comments: "this is updated comments"
//         }
//     }
//     // { $currentDate: {lastUpdated: true}}
// )

// "_id": "6344559b6f731992f1c50a35",
// db.createCollection('logdata')

// Insert a few documents into the sales collection.
db.logdatas.insertOne([
//   { 'item': 'abc', 'price': 10, 'quantity': 2, 'date': new Date('2014-03-01T08:00:00Z') },
//   { 'item': 'jkl', 'price': 20, 'quantity': 1, 'date': new Date('2014-03-01T09:00:00Z') },
   { 'name': 'nam', 'price': 20, 'quantity': 1, 'date': new Date('2014-03-01T09:00:00Z') , 'emai':'ema@sd.as', 'day':'tuesday'},
//  {'name':'testname'}
]);

// // Run a find command to view items sold on April 4th, 2014.
// db.sales.find({ date: { $gte: new Date('2014-04-04'), $lt: new Date('2014-04-05') } });

// // Build an aggregation to view total sales for each product in 2014.
// const aggregation = [
//   { $match: { date: { $gte: new Date('2014-01-01'), $lt: new Date('2015-01-01') } } },
//   { $group: { _id: '$item', totalSaleAmount: { $sum: { $multiply: [ '$price', '$quantity' ] } } } }
// ];

// // Run the aggregation and open a cursor to the results.
// // Use toArray() to exhaust the cursor to return the whole result set.
// // You can use hasNext()/next() to iterate through the cursor page by page.
// db.sales.aggregate(aggregation);
